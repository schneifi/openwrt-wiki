====== TP-Link TL-WA7210N ======
TP-Link TL-WA7210N

===== Supported Versions =====
^ Version/Model ^ Launch Date ^ S/N ^ OpenWrt Version Supported ^ Model Specific Notes ^
| v2.1 |  2014-??  | 2141002T00247 |  WIP  | 2.4 GHz outdoor AP |


OEM source code available at: [[http://www.tp-link.com.de/resources/gpl/150Router.tar]]

===== Hardware Highlights =====
^ SoC ^ Ram ^ Flash ^ Network ^ USB ^ Serial ^ JTag ^
| QCA AR9331 | 32MiB | 4MiB | 1x GbE (passive PoE) | No | Yes | ? |

Manufacturer's site: [[http://www.tp-link.com/en/products/details/?categoryid=1246&model=TL-WA7210N]]

Forum: [[https://forum.openwrt.org/viewtopic.php?id=46779]]

==== FIXME ====
This device is very similar to its 5 GHz sibling, [[/toh/tp-link/tl-wa7510n]]

| [[doc/howto/generic.overview]] if you have no time to write certain stuff link to this |
| [[doc/howto/basic.config]] should lead the way, do not explain this again  |
| DO NOT provide a complete howto here! Instead //groom// the general HowTos.  |


===== Installation =====
  - → [[doc:howto:obtain.firmware]]
  - → [[doc:howto:generic.flashing|Install OpenWrt]]
  - → **»»»»here»»»»[[about/latest|Latest OpenWrt release]]««««here««««**

For the initial install of OpenWRT, download the version named
openwrt-ar71xx-generic-tl-wa7210n-v2-squashfs-factory.bin

The web UI does some sanity check on the file name. Rename the file downloaded above to something like
wa7210nv2_en_3_99_0_up(141123).bin

The difference to the OEM firmware you can download is that we skip "_boot" from the filename so that upgrade tool of the original firmware knows it will get a firmware image without boot loader.

==== Enable internal Antenna ====

gpio 28 enables amplifier.
<code>
echo 28 > /sys/class/gpio/export
echo "out" > /sys/class/gpio/gpio28/direction
echo 1 > /sys/class/gpio/gpio28/value
</code>

==== Flash Layout ====

FIXME
Please check out the article [[doc:techref:Flash Layout]]. It contains an example and a couple of explanations.

==== OEM easy installation ====

FIXME

==== OEM installation using the TFTP method ====
FIXME
->  [[doc:howto:generic.flashing.tftp]]

=== Specific values you need ===

| Bootloader tftp server IPv4 address | FILL-IN |
| Bootloader MAC address (special) | FILL-IN |
| Firmware tftp image | [[about/latest|Latest OpenWrt release]] (**''NOTE:''** Name must contain //"tftp"//) |
| TFTP Transfer Window | FILL-IN seconds |
| TFTP Window Start | approximately FILL-IN seconds after power on |
| TFTP Client Required IP Address | FILL-IN |

==== Upgrading OpenWrt ====
->  [[doc:howto:generic.sysupgrade]]

If you have already installed OpenWrt and like to reflash for e.g. upgrading to a new OpenWrt version you can upgrade using the mtd command line tool. It is important that you put the firmware image into the ramdisk (/tmp) before you start flashing.

=== LuCI Web Upgrade Process ===

  * Browse to http://192.168.1.1/cgi-bin/luci/mini/system/upgrade/ LuCI Upgrade URL
  * Upload image file for sysupgrade to LuCI
  * Wait for reboot

=== Terminal Upgrade Process ===

  * Login as root via SSH on 192.168.1.1
  * Use the following commands to upgrade.

<code>
cd /tmp/
wget http://http://downloads.openwrt.org/snapshots/trunk/XXX/xxx.abc
sysupgrade /tmp/xxx.abc
</code>

  *If sysupgrade does not support this router, use the following commands.

<code>
cd /tmp/
wget http://http://downloads.openwrt.org/snapshots/trunk/XXX/xxx.abc
mtd write /tmp/xxx.abc linux && reboot</code>


=====Back to stock firmware=====
-> [[doc:howto:generic.uninstall]]

{{page>meta:infobox:dangerous&noheader&nofooter&noeditbtn}}

With the TL-WA7210Nv2, there is a catch: the stock firmware is obtained from the OEM: http://www.tplink.com/en/support/download/?model=TL-WA7210N&version=V2

  * look inside the ZIP file downloaded above
  * in case the file name of this firmware file does not contain the word **//"boot"//** in it, you can simply revert back to original firmware
  * in case the file name of this firmware file does contain the word **//"boot"//** in it, you need to cut off parts of the image file //before// flashing it:

An example of an image file with the word "boot" in it is ''wa7210nv2_en_3_18_0_up_boot(131118).bin''.

Cut the first 0x20200 (that is 131,584 = 257*512) Bytes from original firmware:
<code>
dd if=orig.bin of=tplink.bin skip=257 bs=512
</code>

You should transfer the firmeware image to the /tmp folder and revert back to original firmware (if availlable you can flash the firmware via the webinterface as well):

Via the safer method using sysupgrade:
<code>
sysupgrade /tmp/tplink.bin
</code>

Or alternatively you can use the mtd method:
<code>
mtd -r write /tmp/tplink.bin firmware
</code>

Details about the layout of the original firmware:

<code>
$ binwalk wa7210nv2_en_3_18_0_up_boot\(131118\).bin 

DECIMAL   	HEX       	DESCRIPTION
-------------------------------------------------------------------------------------------------------
0         	0x0       	TP-Link firmware header, firmware version: 3.18.0, image version: "ver. 1.0", product ID: 0x72100002, product version: 1, kernel load address: 0x80002000, kernel entry point: 0x801D7430, kernel offset: 512, kernel length: 894816, rootfs offset: 1048576, rootfs length: 2883584, bootloader offset: 0, bootloader length: 48335
15536     	0x3CB0    	uImage header, header size: 64 bytes, header CRC: 0x779C2812, created: Mon Nov 18 08:03:43 2013, image size: 33247 bytes, Data Address: 0x80010000, Entry Point: 0x80010000, data CRC: 0x51A5A3CF, OS: Linux, CPU: MIPS, image type: Firmware Image, compression type: lzma, image name: "u-boot image"
15600     	0x3CF0    	LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 95176 bytes
131584    	0x20200   	TP-Link firmware header, firmware version: 3.18.0, image version: "ver. 1.0", product ID: 0x72100002, product version: 1, kernel load address: 0x80002000, kernel entry point: 0x801D7430, kernel offset: 512, kernel length: 894816, rootfs offset: 1048576, rootfs length: 2883584, bootloader offset: 0, bootloader length: 0
132096    	0x20400   	LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 2589500 bytes
1180160   	0x120200  	Squashfs filesystem, little endian, version 4.0, compression: lzma, size: 2704365 bytes,  597 inodes, blocksize: 131072 bytes, created: Mon Nov 18 08:13:33 2013 
</code>

This is what mktplinkfw has to say about the original firmware:

<code>
$ mktplinkfw -i wa7210nv2_en_3_18_0_up_boot\(131118\).bin 
File name              : wa7210nv2_en_3_18_0_up_boot(131118).bin
File size              : 0x003e0200 /  4063744 bytes
Version 1 Header size  : 0x00000200 /      512 bytes
Header MD5Sum1         : 6a 16 35 00 6c 47 19 45 bc 9b f2 bb d0 7b 76 e0 (ok)
Header MD5Sum2         : cc 52 f1 c9 50 5d 39 16 4d 94 67 b7 e8 5d 2e c4 (purpose yet unknown, unchecked here)

Vendor name            : TP-LINK Technologies
Firmware version       : ver. 1.0
Hardware ID            : 0x72100002 (TL-WA7210N)
Hardware Revision      : 0x00000001 (expected: 0x00000002)

Kernel data offset     : 0x00000200 /      512 bytes
Kernel data length     : 0x000da760 /   894816 bytes
Kernel load address    : 0x80002000                  (OpenWrt default: 0x80060000)
Kernel entry point     : 0x801d7430                  (OpenWrt default: 0x80060000)
Rootfs data offset     : 0x00100000 /  1048576 bytes (OpenWrt default: 0x00140000)
Rootfs data length     : 0x002c0000 /  2883584 bytes
Boot loader data offset: 0x00000000 /        0 bytes
Boot loader data length: 0x0000bccf /    48335 bytes
Total firmware length  : 0x003e0200 /  4063744 bytes
</code>

===== Basic configuration =====
-> [[doc:howto:basic.config|Basic configuration]] After flashing, proceed with this.\\
Set up your Internet connection, configure wireless, configure USB port, etc.


===== Specific Configuration =====
==== Interfaces ====

The default network configuration is:
^ Interface Name ^ Description ^ Default configuration ^
| br-lan | LAN & WiFi | 192.168.1.1/24 | 

==== Failsafe mode ====
-> [[doc:howto:generic.failsafe]]

==== Buttons ====
-> [[doc:howto:hardware.button]] on howto use and configure the hardware button(s).

The TP-Link TL-WA7210N has one reset button. 
^ BUTTON ^ Event ^
| Reset | reset | 


===== Hardware =====
==== Info ====
| **[[wp>Instruction set]]:**               | [[wp>MIPS architecture|MIPS]] |
| **Vendor:**                               | [[wp>Qualcomm Atheros]] |
| **[[doc:techref:Bootloader]]:**           | [[doc:techref:bootloader:uboot|crippled U-Boot]]  |
| **[[doc:hardware:soc|System-On-Chip]]:**  | QCA9230 |
| **[[doc:hardware:cpu|CPU]] @Frq**         | MIPS 24Kc V7.4 @400MHz / MIPS 34Kc V x.y @540MHz / MIPS 74Kc Vers. ?.? @720MHz |
| **Flash size:**                 | 4096 KiB |
| **Flash Chip:**                 | ? |
| **RAM size:**                   | 32 MiB   |
| **RAM Chip:**                   |  Zentel A3S56D30FTP |
| **Wireless No1:**               | //SoC-integrated//: QCA9380 w/ 2x2 MIMO for 2.4GHz 802.11b/g/n   |
| **[[doc:hardware:Switch]]:**    | ?  |
| **[[doc/hardware/internet.access.technologies|Modem]]:**   | none |
| **USB:**                        | none  |
| **[[doc:hardware:port.serial|Serial]]:**  | [[#Serial|Yes]] |
| **[[doc:hardware:port.jtag|JTAG]]:**      | [[#JTAG|?]]   |

==== Photos ====
TL-WA7210N v2.1

//Front://

**Photo of front of the casing**

//Back://

**Photo of back of the casing**

==== Opening the case ====
**Note:** This will void your warranty!

  *To remove the cover do a/b/c

//Main PCB//

**Photo of PCB**

==== Serial ====
-> [[doc:hardware:port.serial]] general information about the serial port, serial port cable, etc.

How to connect to the Serial Port of this specific device:

**Photo of PCB with markings**

To access the U-Boot command prompt, type "tpl" to interrupt the boot sequence.

If you want to login to the vendor firmware on the serial console, login
as root using password "5up".

==== JTAG ====
-> [[doc:hardware:port.jtag]] general information about the JTAG port, JTAG cable, etc.

How to connect to the JTAG Port of this specific device:

**Photo of PCB with markings**

==== GPIOs ====
-> [[doc:hardware:port.GPIO]]
The AR933x platform provides 30 GPIOs. Some of them are used by the router for status, buttons and other stuff. The table below shows the results of some investigation:

^        ^               ^            ^  Voltage level at GPIO in output-mode  ^^  gpioX/value in input-mode when GPIO is: ^^^
^  GPIO  ^  Common Name  ^  PCB Name  ^  gpioX/value=1  ^ gpioX/value=0         ^  Floating  ^  Pulled to GND  ^  Pulled to Vcc  ^
|      0 |  Signal strength 1     |  LED5      |  3.28 (active high)          |  0                     |            |                 |                  |
|      1 |  Signal strength 2     |  LED6      |  3.28 (active high)          |  0                     |            |                 |                  |
|      2 |               |            |                 |                       |            |                 |                  |
|      3 |               |            |                 |                       |            |                 |                  |
|      4 |               |            |                 |                       |            |                 |                  |
|      5 |               |            |                 |                       |            |                 |                  |
|      6 |               |            |                 |                       |            |                 |                  |
|      7 |               |            |                 |                       |            |                 |                  |
|      8 |               |            |                 |                       |            |                 |                  |
|      9 |               |            |                 |                       |            |                 |                  |
|     10 |               |            |                 |                       |            |                 |                  |
|     11 |               |            |                 |                       |            |                 |                  |
|     12 |               |            |                 |                       |            |                 |                  |
|     13 |               |            |                 |                       |            |                 |                  |
|     14 |               |            |                 |                       |            |                 |                  |
|     15 |               |            |                 |                       |            |                 |                  |
|     16 |               |            |                 |                       |            |                 |                  |
|     26 |  LAN                   |  LED4      |  3.28        |  0 (active low)                     |            |                 |                  |
|     18 |               |            |                 |                       |            |                 |                  |
|     19 |               |            |                 |                       |            |                 |                  |
|     20 |               |            |                 |                       |            |                 |                  |
|     21 |               |            |                 |                       |            |                 |                  |
|     22 |               |            |                 |                       |            |                 |                  |
|     23 |               |            |                 |                       |            |                 |                  |
|     24 |               |            |                 |                       |            |                 |                  |
|     25 |               |            |                 |                       |            |                 |                  |
|     26 |  Signal strength 4     |  LED3      |  3.28        |  0 (active low)                     |            |                 |                  |
|     27 |  Signal strength 3     |  LED2      |  3.28        |  0 (active low)                     |            |                 |                  |
|     28 |               |            |                 |                       |            |                 |                  |
|     29 |               |            |                 |                       |            |                 |                  |

To make the GPIOs available via sysfs, the required ones have to be exported to userspace, as it is explained on a page of the [[http://squidge.sourceforge.net/gpio/|Squidge-Project]]. Kernel modules occupying that resource need to be removed before (e.g. "leds-gpio" and "gpio-buttons"). In output-mode, voltage levels of the GPIOs were measured against GND, after the value 1 or 0 had been written to /sys/class/gpio/gpioX/value. In input-mode, the value of the file /sys/class/gpio/gpioX/value was read when the GPIO was floating (initial state), pulled to GND or pulled to Vcc. 

==== LEDs ====
How to configure LEDs in general, see the LED section in the [[doc/uci/system]].

The TL-WA7210N has 5 LEDs:

^ LED name ^ LED print ^ Internal name ^ Trigger ^ PCB label ^
| Power       | Power symbol             | N/A (fixed supply)       | N/A | LED1 |
| LAN         | LAN                      | tl-wa7210:green:lan      | ?   | LED4 |
| Signal 25%  | Wireless Signal Strength | tl-wa7210:green:signal1  | ?   | LED5 |
| Signal 50%  | Wireless Signal Strength | tl-wa7210:green:signal2  | ?   | LED6 |
| Signal 75%  | Wireless Signal Strength | tl-wa7210:green:signal3  | ?   | LED2 |
| Signal 100% | Wireless Signal Strength | tl-wa7210:green:signal4  | ?   | LED3 |

===== Debricking =====
-> [[doc:howto:generic.debrick]]

===== Bootloader Mods =====
  - you could read about [[doc:techref:bootloader]] in general

===== Hardware mods =====
  - as a beginner, you really should inform yourself about [[doc:hardware:soldering]] in general and then obtain some practical experience!

==== 128MiB RAM Mod ====
==== I²C GPIO Mod ====
==== I²C Tiny-USB Mod ====

===== Bootlogs =====

==== OEM bootlog ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>

U-Boot 1.1.4 (Mar 20 2013 - 09:20:08)

AP121 (ar9330) U-boot

DRAM:  32 MB
led turning on for 1s...
id read 0x100000ff
flash size 4194304, sector count = 64
Flash:  4 MB
Using default environment

In:    serial
Out:   serial
Err:   serial
Net:   ag7240_enet_initialize...
No valid address in Flash. Using fixed address
No valid address in Flash. Using fixed address
: cfg1 0x5 cfg2 0x7114
eth0: 00:03:7f:09:0b:ad
ag7240_phy_setup 
eth0 up
: cfg1 0xf cfg2 0x7214
eth1: 00:03:7f:09:0b:ad
athrs26_reg_init_lan
ATHRS26: resetting s26
ATHRS26: s26 reset done
ag7240_phy_setup 
eth1 up
eth0, eth1
Autobooting in 1 seconds
## Booting image at 9f020000 ...
   Uncompressing Kernel Image ... OK

Starting kernel ...

Booting AR9330(Hornet)...
Linux version 2.6.31--LSDK-9.2.0.312 (root@localhost.localdomain) (gcc version 4.3.3 (GCC) ) #1 Wed Mar 20 09:24:16 CST 2013
flash_size passed from bootloader = 4
CPU revision is: 00019374 (MIPS 24Kc)
Determined physical RAM map:
 memory: 02000000 @ 00000000 (usable)
User-defined physical RAM map:
 memory: 02000000 @ 00000000 (usable)
Zone PFN ranges:
  Normal   0x00000000 -> 0x00002000
Movable zone start PFN for each node
early_node_map[1] active PFN ranges
    0: 0x00000000 -> 0x00002000
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 8128
Kernel command line: console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:128k(u-boot),1024k(kernel),2816(rootfs),64k(config),64k(ART) mem=32M
PID hash table entries: 128 (order: 7, 512 bytes)
Dentry cache hash table entries: 4096 (order: 2, 16384 bytes)
Inode-cache hash table entries: 2048 (order: 1, 8192 bytes)
Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
Primary data cache 32kB, 4-way, VIPT, cache aliases, linesize 32 bytes
Writing ErrCtl register=00000000
Readback ErrCtl register=00000000
Memory: 29876k/32768k available (1883k kernel code, 2892k reserved, 521k data, 116k init, 0k highmem)
Hierarchical RCU implementation.
NR_IRQS:128
plat_time_init: plat time init done
Calibrating delay loop... 266.24 BogoMIPS (lpj=532480)
Mount-cache hash table entries: 512
NET: Registered protocol family 16
===== ar7240_platform_init: 0
bio: create slab <bio-0> at 0
SCSI subsystem initialized
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
NET: Registered protocol family 2
IP route cache hash table entries: 1024 (order: 0, 4096 bytes)
TCP established hash table entries: 1024 (order: 1, 8192 bytes)
TCP bind hash table entries: 1024 (order: 0, 4096 bytes)
TCP: Hash tables configured (established 1024 bind 1024)
TCP reno registered
NET: Registered protocol family 1
AR7240 GPIOC major 0
squashfs: version 4.0 (2009/01/31) Phillip Lougher
NTFS driver 2.1.29 [Flags: R/O].
msgmni has been set to 58
alg: No test for lzma (lzma-generic)
alg: No test for stdrng (krng)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
Serial: 8250/16550 driver, 1 ports, IRQ sharing disabled
ttyS0: detected caps 00000000 should be 00000100
serial8250.0: ttyS0 at MMIO 0xb8020000 (irq = 19) is a 16550A
console [ttyS0] enabled
PPP generic driver version 2.4.2
NET: Registered protocol family 24
cmdlinepart partition parsing not available
set partition boot 
set partition kernel 
set partition rootfs 
set partition config 
set partition art 
set partition � 
Searching for RedBoot partition table
5 RedBoot partitions found on MTD device ar7240-nor0
Creating 5 MTD partitions on "ar7240-nor0":
0x000000000000-0x000000020000 : "boot"
0x000000020000-0x000000120000 : "kernel"
0x000000120000-0x0000003e0000 : "rootfs"
0x0000003e0000-0x0000003f0000 : "config"
0x0000003f0000-0x000000400000 : "art"
->Oops: flash id 0x10215 . 
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
Port Status 1c000004 
ar7240-ehci ar7240-ehci.0: ATH EHCI
ar7240-ehci ar7240-ehci.0: new USB bus registered, assigned bus number 1
ehci_reset Intialize USB CONTROLLER in host mode: 3
ehci_reset Port Status 1c000000 
ar7240-ehci ar7240-ehci.0: irq 3, io mem 0x1b000000
ehci_reset Intialize USB CONTROLLER in host mode: 3
ehci_reset Port Status 1c000000 
ar7240-ehci ar7240-ehci.0: USB 2.0 started, EHCI 1.00
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 1 port detected
TCP cubic registered
NET: Registered protocol family 17
802.1Q VLAN Support v1.8 Ben Greear <greearb@candelatech.com>
All bugs added by David S. Miller <davem@redhat.com>
ar7240wdt_init: Registering WDT success
VFS: Mounted root (squashfs filesystem) readonly on device 31:2.
Freeing unused kernel memory: 116k freed
usb 1-1: new full speed USB device using ar7240-ehci and address 2
usb 1-1: device descriptor read/64, error -71
usb 1-1: device descriptor read/64, error -71
usb 1-1: new full speed USB device using ar7240-ehci and address 3
usb 1-1: device descriptor read/64, error -71
init started:  BusyBox v1.01 (2013.03.20-01:28+0000) multi-call binary
usb 1-1: device descriptor read/64, error -71
This Board use 2.6.31
usb 1-1: new full speed USB device using ar7240-ehci and address 4
xt_time: kernel timezone is -0000
nf_conntrack version 0.5.0 (512 buckets, 5120 max)
usb 1-1: device not accepting address 4, error -71
usb 1-1: new full speed USB device using ar7240-ehci and address 5
usb 1-1: device not accepting address 5, error -71
hub 1-0:1.0: unable to enumerate USB device on port 1
ip_tables: (C) 2000-2006 Netfilter Core Team
insmod: cannot open module `/lib/modules/2.6.31/kernel/iptable_raw.ko': No such file or directory
insmod: cannot open module `/lib/modules/2.6.31/kernel/flashid.ko': No such file or directory
PPPoL2TP kernel driver, V1.0
PPTP driver version 0.8.3
insmod: cannot open module `/lib/modules/2.6.31/kernel/harmony.ko': No such file or directory

Now flash open!
 (none) mips #1 Wed Mar 20 09:24:16 CST 2013 (none)
(none) login: Now flash open!
ATHR_GMAC: Length per segment 1536
ATHR_GMAC: fifo cfg 3 01f00140
2
ATHR_GMAC: Max segments per packet :   1
ATHR_GMAC: Max tx descriptor count :   164
ATHR_GMAC: Max rx descriptor count :   196
ATHR_GMAC: Mac capability flags    :   10004D83
1
ATHR_GMAC: Max segments per packet :   1
ATHR_GMAC: Max tx descriptor count :   96
ATHR_GMAC: Max rx descriptor count :   252
ATHR_GMAC: Mac capability flags    :   4403
athr_gmac_ring_alloc Allocated 1536 at 0x81c93000
athr_gmac_ring_alloc Allocated 4032 at 0x81d63000
Setting Drop CRC Errors, Pause Frames and Length Error frames 
Setting PHY...mac 0
athr_gmac_ring_alloc Allocated 2624 at 0x81e76000
athr_gmac_ring_alloc Allocated 3136 at 0x81f1c000
athr_gmac_mii_setup: MDC check failed
Setting Drop CRC Errors, Pause Frames and Length Error frames 
ATHRS26: resetting s26
ATHRS26: s26 reset done
Setting PHY...mac 1
ATH_MAC_TIMER: Current RxFsm for GMAC unit:1 is 0x0 >> 11 is 0x0
device eth0 entered promiscuous mode
Now flash open!
asf: module license 'Proprietary' taints kernel.
Disabling lock debugging due to kernel taint
ath_hal: 0.9.17.1 (AR9380, DEBUG, REGOPS_FUNC, WRITE_EEPROM, 11D)
ath_rate_atheros: Copyright (c) 2001-2005 Atheros Communications, Inc, All Rights Reserved
ath_dev: Copyright (c) 2001-2007 Atheros Communications, Inc, All Rights Reserved
ath_ahb: 9.2.0_U10.1020 (Atheros/multi-bss)
__ath_attach: Set global_scn[0]
ACBKMinfree = 48
ACBEMinfree = 32
ACVIMinfree = 16
ACVOMinfree = 0
CABMinfree = 48
UAPSDMinfree = 0
Bootstrap clock 25MHz
ar9300RadioAttach: Need analog access recipe!!
Restoring Cal data from Flash
ath_get_caps[5169] rx chainmask mismatch actual 1 sc_chainmak 0
ath_get_caps[5144] tx chainmask mismatch actual 1 sc_chainmak 0
wifi0: Atheros 9380: mem=0xb8100000, irq=2
wlan_vap_create : enter. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1
wlan_vap_create : exit. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1.
VAP device ath0 created 
 
 DES SSID SET=TP-LINK_D7B5FC 
ieee80211_scan_unregister_event_handler: Failed to unregister evhandler=c0812180 arg=81f992c0
wlan_vap_delete : enter. vaphandle=0x81fb4000
wlan_vap_delete : exit. vaphandle=0x81fb4000
wlan_vap_create : enter. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1
wlan_vap_create : exit. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1.
VAP device ath0 created 
 
 DES SSID SET=TP-LINK_D7B5FC 
 ieee80211_ioctl_siwmode: imr.ifm_active=393856, new mode=3, valid=1 
WARNING: Fragmentation with HT mode NOT ALLOWED!!
device ath0 entered promiscuous mode
br0: port 2(ath0) entering forwarding state
 ieee80211_ioctl_siwmode: imr.ifm_active=1442432, new mode=3, valid=1 
br0: port 2(ath0) entering disabled state
 
 DES SSID SET=TP-LINK_D7B5FC 
br0: port 2(ath0) entering forwarding state

</code>
</p>
</HTML>

==== U-Boot printenv ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>
hornet> printenv
bootargs=console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:256k(u-boot),64k(u-boot-env),2752k(rootfs),896k(uIma)
bootcmd=bootm 0x9f020000
bootdelay=1
baudrate=115200
ethaddr=0xba:0xbe:0xfa:0xce:0x07:0x41
ipaddr=192.168.1.111
serverip=192.168.1.100
stdin=serial
stdout=serial
stderr=serial
ethact=eth0
</code>

==== OpenWrt bootlog ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>
Starting kernel ...

[    0.000000] Linux version 3.10.58 (build@build) (gcc version 4.8.3 (OpenWrt/Linaro GCC 4.8-2014.04 r43124) ) #2 Sat Nov 22 20:18:05 UTC 2014
[    0.000000] bootconsole [early0] enabled
[    0.000000] CPU revision is: 00019374 (MIPS 24Kc)
[    0.000000] SoC: Atheros AR9330 rev 1
[    0.000000] Clocks: CPU:400.000MHz, DDR:400.000MHz, AHB:200.000MHz, Ref:25.000MHz
[    0.000000] Determined physical RAM map:
[    0.000000]  memory: 02000000 @ 00000000 (usable)
[    0.000000] Initrd not found or empty - disabling initrd
[    0.000000] Zone ranges:
[    0.000000]   Normal   [mem 0x00000000-0x01ffffff]
[    0.000000] Movable zone start for each node
[    0.000000] Early memory node ranges
[    0.000000]   node   0: [mem 0x00000000-0x01ffffff]
[    0.000000] Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
[    0.000000] Primary data cache 32kB, 4-way, VIPT, cache aliases, linesize 32 bytes
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 8128
[    0.000000] Kernel command line:  board=TL-WA7210N-v2 console=ttyATH0,115200 rootfstype=squashfs,jffs2 noinitrd
[    0.000000] PID hash table entries: 128 (order: -3, 512 bytes)
[    0.000000] Dentry cache hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Inode-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.000000] Writing ErrCtl register=00000000
[    0.000000] Readback ErrCtl register=00000000
[    0.000000] Memory: 28784k/32768k available (2240k kernel code, 3984k reserved, 601k data, 228k init, 0k highmem)
[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS:51
[    0.000000] Calibrating delay loop... 265.42 BogoMIPS (lpj=1327104)
[    0.080000] pid_max: default: 32768 minimum: 301
[    0.080000] Mount-cache hash table entries: 512
[    0.090000] NET: Registered protocol family 16
[    0.100000] MIPS: machine is TP-LINK TL-WA7210N v2
[    0.310000] bio: create slab <bio-0> at 0
[    0.320000] Switching to clocksource MIPS
[    0.320000] NET: Registered protocol family 2
[    0.330000] TCP established hash table entries: 512 (order: 0, 4096 bytes)
[    0.330000] TCP bind hash table entries: 512 (order: -1, 2048 bytes)
[    0.330000] TCP: Hash tables configured (established 512 bind 512)
[    0.340000] TCP: reno registered
[    0.340000] UDP hash table entries: 256 (order: 0, 4096 bytes)
[    0.350000] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
[    0.360000] NET: Registered protocol family 1
[    0.380000] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.380000] jffs2: version 2.2 (NAND) (SUMMARY) (LZMA) (RTIME) (CMODE_PRIORITY) (c) 2001-2006 Red Hat, Inc.
[    0.390000] msgmni has been set to 56
[    0.400000] io scheduler noop registered
[    0.400000] io scheduler deadline registered (default)
[    0.410000] Serial: 8250/16550 driver, 1 ports, IRQ sharing disabled
[    0.410000] ar933x-uart: ttyATH0 at MMIO 0x18020000 (irq = 11) is a AR933X UART
[    0.420000] console [ttyATH0] enabled, bootconsole disabled
[    0.420000] console [ttyATH0] enabled, bootconsole disabled
[    0.430000] ath79-spi ath79-spi: master is unqueued, this is deprecated
[    0.440000] m25p80 spi0.0: found s25sl032p, expected m25p80
[    0.440000] m25p80 spi0.0: s25sl032p (4096 Kbytes)
[    0.450000] 5 tp-link partitions found on MTD device spi0.0
[    0.450000] Creating 5 MTD partitions on "spi0.0":
[    0.460000] 0x000000000000-0x000000020000 : "u-boot"
[    0.470000] 0x000000020000-0x00000012233c : "kernel"
[    0.470000] mtd: partition "kernel" must either start or end on erase block boundary or be smaller than an erase block -- forcing read-only
[    0.480000] 0x00000012233c-0x0000003f0000 : "rootfs"
[    0.490000] mtd: partition "rootfs" must either start or end on erase block boundary or be smaller than an erase block -- forcing read-only
[    0.500000] mtd: device 2 (rootfs) set to be root filesystem
[    0.510000] 1 squashfs-split partitions found on MTD device rootfs
[    0.510000] 0x000000300000-0x0000003f0000 : "rootfs_data"
[    0.520000] 0x0000003f0000-0x000000400000 : "art"
[    0.520000] 0x000000020000-0x0000003f0000 : "firmware"
[    0.550000] libphy: ag71xx_mdio: probed
[    1.100000] ag71xx-mdio.1: Found an AR7240/AR9330 built-in switch
[    2.130000] eth0: Atheros AG71xx at 0xba000000, irq 5, mode:GMII
[    2.130000] TCP: cubic registered
[    2.130000] NET: Registered protocol family 17
[    2.140000] 8021q: 802.1Q VLAN Support v1.8
[    2.150000] VFS: Mounted root (squashfs filesystem) readonly on device 31:2.
[    2.160000] Freeing unused kernel memory: 228K (80327000 - 80360000)
procd: Console is alive
procd: - watchdog -
[    4.860000] usbcore: registered new interface driver usbfs
[    4.860000] usbcore: registered new interface driver hub
[    4.870000] usbcore: registered new device driver usb
[    4.880000] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    4.880000] ehci-platform: EHCI generic platform driver
[    4.890000] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
procd: - preinit -
Press the [f] key and hit [enter] to enter failsafe mode
Press the [1], [2], [3] or [4] key and hit [enter] to select the debug level
[    7.570000] eth0: link up (1000Mbps/Full duplex)
jffs2 is not ready - marker found
[    9.740000] eth0: link down
procd: - early -
procd: - watchdog -
procd: - ubus -
procd: - init -
Please press Enter to activate this console.
[   12.340000] NET: Registered protocol family 10
[   12.350000] ip6_tables: (C) 2000-2006 Netfilter Core Team
[   12.370000] Loading modules backported from Linux version master-2014-10-08-0-g0275925
[   12.370000] Backport generated by backports.git backports-20140905-1-gde42785
[   12.390000] ip_tables: (C) 2000-2006 Netfilter Core Team
[   12.400000] nf_conntrack version 0.5.0 (453 buckets, 1812 max)
[   12.450000] xt_time: kernel timezone is -0000
[   12.490000] cfg80211: Calling CRDA to update world regulatory domain
[   12.490000] cfg80211: World regulatory domain updated:
[   12.500000] cfg80211:  DFS Master region: unset
[   12.500000] cfg80211:   (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp), (dfs_cac_time)
[   12.510000] cfg80211:   (2402000 KHz - 2472000 KHz @ 40000 KHz), (N/A, 2000 mBm), (N/A)
[   12.520000] cfg80211:   (2457000 KHz - 2482000 KHz @ 40000 KHz), (N/A, 2000 mBm), (N/A)
[   12.530000] cfg80211:   (2474000 KHz - 2494000 KHz @ 20000 KHz), (N/A, 2000 mBm), (N/A)
[   12.530000] cfg80211:   (5170000 KHz - 5250000 KHz @ 160000 KHz), (N/A, 2000 mBm), (N/A)
[   12.540000] cfg80211:   (5250000 KHz - 5330000 KHz @ 160000 KHz), (N/A, 2000 mBm), (0 s)
[   12.550000] cfg80211:   (5490000 KHz - 5730000 KHz @ 160000 KHz), (N/A, 2000 mBm), (0 s)
[   12.560000] cfg80211:   (5735000 KHz - 5835000 KHz @ 80000 KHz), (N/A, 2000 mBm), (N/A)
[   12.570000] cfg80211:   (57240000 KHz - 63720000 KHz @ 2160000 KHz), (N/A, 0 mBm), (N/A)
[   12.650000] PPP generic driver version 2.4.2
[   12.660000] NET: Registered protocol family 24
[   19.910000] jffs2_scan_eraseblock(): End of filesystem marker found at 0x0
[   19.940000] jffs2_build_filesystem(): unlocking the mtd device... done.
[   19.940000] jffs2_build_filesystem(): erasing all blocks after the end marker... done.
[   24.740000] jffs2: notice: (785) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   25.800000] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[   25.800000] device eth0 entered promiscuous mode
[   25.820000] IPv6: ADDRCONF(NETDEV_UP): br-lan: link is not ready
procd: - init complete -
[   26.900000] eth0: link up (1000Mbps/Full duplex)
[   26.900000] br-lan: port 1(eth0) entered forwarding state
[   26.900000] br-lan: port 1(eth0) entered forwarding state
[   26.910000] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[   26.930000] IPv6: ADDRCONF(NETDEV_CHANGE): br-lan: link becomes ready
[   28.900000] br-lan: port 1(eth0) entered forwarding state



BusyBox v1.22.1 (2014-11-22 19:46:32 UTC) built-in shell (ash)
Enter 'help' for a list of built-in commands.

  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------
 CHAOS CALMER (Bleeding Edge, r43124)
 -----------------------------------------------------
  * 1 1/2 oz Gin            Shake with a glassful
  * 1/4 oz Triple Sec       of broken ice and pour
  * 3/4 oz Lime Juice       unstrained into a goblet.
  * 1 1/2 oz Orange Juice
  * 1 tsp. Grenadine Syrup
 -----------------------------------------------------
root@OpenWrt:/# 
</code>
</p>
</HTML>


===== Notes =====

GPIOs:

The TL-WA7210Nv2 has 6 LEDs

===== Tags =====
For some Help with the Tags, please have a look here: [[meta/tags]]

{{tag>GigabitEthernet 1NIC 1WNIC ath9k 32RAM 4Flash MIPS32}}
